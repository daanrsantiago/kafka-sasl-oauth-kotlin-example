node.id=1
listener.security.protocol.map=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,SASL_PLAINTEXT:PLAINTEXT
advertised.listeners=INTERNAL://broker:9093,SASL_PLAINTEXT://localhost:9092
process.roles=controller,broker
listeners=CONTROLLER://:29093,INTERNAL://:9093,SASL_PLAINTEXT://:9092
inter.broker.listener.name=INTERNAL
controller.quorum.voters=1@broker:29093
controller.listener.names=CONTROLLER
log.dirs=/var/lib/kafka/data

sasl.enabled.mechanisms=OAUTHBEARER
listener.name.sasl_plaintext.oauthbearer.sasl.login.callback.handler.class=org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
listener.name.sasl_plaintext.oauthbearer.sasl.server.callback.handler.class=org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerValidatorCallbackHandler
listener.name.sasl_plaintext.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
    oauth.token.endpoint.uri="http://keycloak:8080/realms/kafka-realm/protocol/openid-connect/token" \
    oauth.client.id="kafka-broker" \
    oauth.client.secret="CLIENT_SECRET_DO_KAFKA_BROKER";
listener.name.sasl_plaintext.oauthbearer.sasl.enabled.mechanisms=OAUTHBEARER
listener.name.sasl_plaintext.oauthbearer.jwks.endpoint.uri=http://keycloak:8080/realms/kafka-example/protocol/openid-connect/certs
listener.name.sasl_plaintext.oauthbearer.expected.issuer=http://keycloak:8080/realms/kafka-example

offsets.topic.replication.factor=1
num.partitions=9