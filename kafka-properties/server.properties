node.id=1
listener.security.protocol.map=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
advertised.listeners=INTERNAL://broker:9093,EXTERNAL://localhost:9092
process.roles=controller,broker
listeners=CONTROLLER://:29093,INTERNAL://:9093,EXTERNAL://:9092
inter.broker.listener.name=INTERNAL
controller.quorum.voters=1@broker:29093
controller.listener.names=CONTROLLER
log.dirs=/var/lib/kafka/data

listener.name.external.sasl.enabled.mechanisms=OAUTHBEARER
listener.name.external.sasl.oauthbearer.expected.audience=kafka-broker
listener.name.external.sasl.oauthbearer.expected.issuer=http://localhost:8082/realms/kafka-example
listener.name.external.sasl.oauthbearer.jwks.endpoint.url=http://keycloak:8080/realms/kafka-example/protocol/openid-connect/certs
listener.name.external.sasl.oauthbearer.token.endpoint.url=http://keycloak:8080/realms/kafka-example/protocol/openid-connect/token
listener.name.external.oauthbearer.sasl.login.callback.handler.class=org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
listener.name.external.oauthbearer.sasl.server.callback.handler.class=org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerValidatorCallbackHandler


offsets.topic.replication.factor=1
num.partitions=9